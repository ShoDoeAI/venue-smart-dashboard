/**
 * Database types generated from Supabase schema
 * 
 * Generated on: ${new Date().toISOString()}
 */

import type { Json } from './json';

export interface Database {
  public: {
    Tables: {
      venue_config: {
        Row: {
          id: string;
          name: string;
          timezone: string;
          settings: Json;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          timezone?: string;
          settings?: Json;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          timezone?: string;
          settings?: Json;
          created_at?: string;
          updated_at?: string;
        };
      };
      api_credentials: {
        Row: {
          id: string;
          service: 'eventbrite' | 'toast' | 'wisk' | 'resy' | 'audience_republic' | 'meta' | 'opentable';
          credentials: Json;
          is_active: boolean;
          last_successful_fetch: string | null;
          last_error: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          service: 'eventbrite' | 'toast' | 'wisk' | 'resy' | 'audience_republic' | 'meta' | 'opentable';
          credentials: Json;
          is_active?: boolean;
          last_successful_fetch?: string | null;
          last_error?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          service?: 'eventbrite' | 'toast' | 'wisk' | 'resy' | 'audience_republic' | 'meta' | 'opentable';
          credentials?: Json;
          is_active?: boolean;
          last_successful_fetch?: string | null;
          last_error?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      venue_snapshots: {
        Row: {
          id: string;
          snapshot_timestamp: string;
          eventbrite_fetched: boolean;
          toast_fetched: boolean;
          wisk_fetched: boolean;
          resy_fetched: boolean;
          audience_republic_fetched: boolean;
          meta_fetched: boolean;
          opentable_fetched: boolean;
          kpis: Json | null;
          alerts: Json | null;
          fetch_duration_ms: number | null;
          errors: Json | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          snapshot_timestamp?: string;
          eventbrite_fetched?: boolean;
          toast_fetched?: boolean;
          wisk_fetched?: boolean;
          resy_fetched?: boolean;
          audience_republic_fetched?: boolean;
          meta_fetched?: boolean;
          opentable_fetched?: boolean;
          kpis?: Json | null;
          alerts?: Json | null;
          fetch_duration_ms?: number | null;
          errors?: Json | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          snapshot_timestamp?: string;
          eventbrite_fetched?: boolean;
          toast_fetched?: boolean;
          wisk_fetched?: boolean;
          resy_fetched?: boolean;
          audience_republic_fetched?: boolean;
          meta_fetched?: boolean;
          opentable_fetched?: boolean;
          kpis?: Json | null;
          alerts?: Json | null;
          fetch_duration_ms?: number | null;
          errors?: Json | null;
          created_at?: string;
        };
      };
      eventbrite_events: {
        Row: {
          id: string;
          snapshot_timestamp: string;
          event_id: string;
          name: string;
          description: string | null;
          start_time: string;
          end_time: string | null;
          created: string | null;
          changed: string | null;
          published: string | null;
          status: string | null;
          currency: string | null;
          online_event: boolean | null;
          listed: boolean | null;
          shareable: boolean | null;
          invite_only: boolean | null;
          capacity: number | null;
          capacity_is_custom: boolean | null;
          venue_id: string | null;
          venue_name: string | null;
          venue_address: Json | null;
          organizer_id: string | null;
          organizer_name: string | null;
          category_id: string | null;
          subcategory_id: string | null;
          format_id: string | null;
          tickets_sold: number;
          tickets_available: number | null;
          total_revenue: number | null;
          ticket_classes: Json | null;
          promotional_codes: Json | null;
          sell_through_rate: number | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          snapshot_timestamp: string;
          event_id: string;
          name: string;
          description?: string | null;
          start_time: string;
          end_time?: string | null;
          created?: string | null;
          changed?: string | null;
          published?: string | null;
          status?: string | null;
          currency?: string | null;
          online_event?: boolean | null;
          listed?: boolean | null;
          shareable?: boolean | null;
          invite_only?: boolean | null;
          capacity?: number | null;
          capacity_is_custom?: boolean | null;
          venue_id?: string | null;
          venue_name?: string | null;
          venue_address?: Json | null;
          organizer_id?: string | null;
          organizer_name?: string | null;
          category_id?: string | null;
          subcategory_id?: string | null;
          format_id?: string | null;
          tickets_sold?: number;
          tickets_available?: number | null;
          total_revenue?: number | null;
          ticket_classes?: Json | null;
          promotional_codes?: Json | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          snapshot_timestamp?: string;
          event_id?: string;
          name?: string;
          description?: string | null;
          start_time?: string;
          end_time?: string | null;
          created?: string | null;
          changed?: string | null;
          published?: string | null;
          status?: string | null;
          currency?: string | null;
          online_event?: boolean | null;
          listed?: boolean | null;
          shareable?: boolean | null;
          invite_only?: boolean | null;
          capacity?: number | null;
          capacity_is_custom?: boolean | null;
          venue_id?: string | null;
          venue_name?: string | null;
          venue_address?: Json | null;
          organizer_id?: string | null;
          organizer_name?: string | null;
          category_id?: string | null;
          subcategory_id?: string | null;
          format_id?: string | null;
          tickets_sold?: number;
          tickets_available?: number | null;
          total_revenue?: number | null;
          ticket_classes?: Json | null;
          promotional_codes?: Json | null;
          created_at?: string;
        };
      };
      toast_transactions: {
        Row: {
          id: string;
          snapshot_timestamp: string;
          transaction_id: string;
          location_id: string;
          created_at: string;
          total_amount: number;
          tax_amount: number;
          tip_amount: number;
          discount_amount: number;
          service_charge_amount: number;
          source_type: string | null;
          status: string | null;
          receipt_number: string | null;
          receipt_url: string | null;
          customer_id: string | null;
          customer_name: string | null;
          customer_email: string | null;
          team_member_id: string | null;
          device_id: string | null;
          item_count: number | null;
          unique_item_count: number | null;
          itemizations: Json | null;
          payment_details: Json | null;
          refunds: Json | null;
          created_at_db: string;
        };
        Insert: {
          id?: string;
          snapshot_timestamp: string;
          transaction_id: string;
          location_id: string;
          created_at: string;
          total_amount: number;
          tax_amount?: number;
          tip_amount?: number;
          discount_amount?: number;
          service_charge_amount?: number;
          source_type?: string | null;
          status?: string | null;
          receipt_number?: string | null;
          receipt_url?: string | null;
          customer_id?: string | null;
          customer_name?: string | null;
          customer_email?: string | null;
          team_member_id?: string | null;
          device_id?: string | null;
          item_count?: number | null;
          unique_item_count?: number | null;
          itemizations?: Json | null;
          payment_details?: Json | null;
          refunds?: Json | null;
          created_at_db?: string;
        };
        Update: {
          id?: string;
          snapshot_timestamp?: string;
          transaction_id?: string;
          location_id?: string;
          created_at?: string;
          total_amount?: number;
          tax_amount?: number;
          tip_amount?: number;
          discount_amount?: number;
          service_charge_amount?: number;
          source_type?: string | null;
          status?: string | null;
          receipt_number?: string | null;
          receipt_url?: string | null;
          customer_id?: string | null;
          customer_name?: string | null;
          customer_email?: string | null;
          team_member_id?: string | null;
          device_id?: string | null;
          item_count?: number | null;
          unique_item_count?: number | null;
          itemizations?: Json | null;
          payment_details?: Json | null;
          refunds?: Json | null;
          created_at_db?: string;
        };
      };
      wisk_inventory: {
        Row: {
          id: string;
          snapshot_timestamp: string;
          item_id: string;
          name: string;
          category: string | null;
          subcategory: string | null;
          supplier: string | null;
          brand: string | null;
          current_stock: number | null;
          unit_of_measure: string | null;
          container_size: number | null;
          containers_in_stock: number | null;
          par_level: number | null;
          critical_level: number | null;
          is_below_par: boolean | null;
          is_critical: boolean | null;
          unit_cost: number | null;
          total_value: number | null;
          last_purchase_price: number | null;
          average_cost: number | null;
          usage_last_period: number | null;
          variance_amount: number | null;
          variance_percentage: number | null;
          locations: Json | null;
          recent_counts: Json | null;
          purchase_history: Json | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          snapshot_timestamp: string;
          item_id: string;
          name: string;
          category?: string | null;
          subcategory?: string | null;
          supplier?: string | null;
          brand?: string | null;
          current_stock?: number | null;
          unit_of_measure?: string | null;
          container_size?: number | null;
          containers_in_stock?: number | null;
          par_level?: number | null;
          critical_level?: number | null;
          is_below_par?: boolean | null;
          is_critical?: boolean | null;
          unit_cost?: number | null;
          total_value?: number | null;
          last_purchase_price?: number | null;
          average_cost?: number | null;
          usage_last_period?: number | null;
          variance_amount?: number | null;
          variance_percentage?: number | null;
          locations?: Json | null;
          recent_counts?: Json | null;
          purchase_history?: Json | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          snapshot_timestamp?: string;
          item_id?: string;
          name?: string;
          category?: string | null;
          subcategory?: string | null;
          supplier?: string | null;
          brand?: string | null;
          current_stock?: number | null;
          unit_of_measure?: string | null;
          container_size?: number | null;
          containers_in_stock?: number | null;
          par_level?: number | null;
          critical_level?: number | null;
          is_below_par?: boolean | null;
          is_critical?: boolean | null;
          unit_cost?: number | null;
          total_value?: number | null;
          last_purchase_price?: number | null;
          average_cost?: number | null;
          usage_last_period?: number | null;
          variance_amount?: number | null;
          variance_percentage?: number | null;
          locations?: Json | null;
          recent_counts?: Json | null;
          purchase_history?: Json | null;
          created_at?: string;
        };
      };
      daily_summaries: {
        Row: {
          id: string;
          date: string;
          total_events: number | null;
          total_tickets_sold: number | null;
          total_capacity: number | null;
          average_sell_through: number | null;
          gross_ticket_revenue: number | null;
          total_bar_revenue: number | null;
          total_food_revenue: number | null;
          total_revenue: number | null;
          transaction_count: number | null;
          average_transaction: number | null;
          low_stock_items: number | null;
          critical_stock_items: number | null;
          average_variance: number | null;
          inventory_value: number | null;
          total_reservations: number | null;
          total_covers: number | null;
          no_show_count: number | null;
          average_party_size: number | null;
          emails_sent: number | null;
          email_open_rate: number | null;
          email_click_rate: number | null;
          marketing_attributed_revenue: number | null;
          social_reach: number | null;
          social_engagement: number | null;
          ad_spend: number | null;
          ad_revenue: number | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          date: string;
          total_events?: number | null;
          total_tickets_sold?: number | null;
          total_capacity?: number | null;
          average_sell_through?: number | null;
          gross_ticket_revenue?: number | null;
          total_bar_revenue?: number | null;
          total_food_revenue?: number | null;
          total_revenue?: number | null;
          transaction_count?: number | null;
          average_transaction?: number | null;
          low_stock_items?: number | null;
          critical_stock_items?: number | null;
          average_variance?: number | null;
          inventory_value?: number | null;
          total_reservations?: number | null;
          total_covers?: number | null;
          no_show_count?: number | null;
          average_party_size?: number | null;
          emails_sent?: number | null;
          email_open_rate?: number | null;
          email_click_rate?: number | null;
          marketing_attributed_revenue?: number | null;
          social_reach?: number | null;
          social_engagement?: number | null;
          ad_spend?: number | null;
          ad_revenue?: number | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          date?: string;
          total_events?: number | null;
          total_tickets_sold?: number | null;
          total_capacity?: number | null;
          average_sell_through?: number | null;
          gross_ticket_revenue?: number | null;
          total_bar_revenue?: number | null;
          total_food_revenue?: number | null;
          total_revenue?: number | null;
          transaction_count?: number | null;
          average_transaction?: number | null;
          low_stock_items?: number | null;
          critical_stock_items?: number | null;
          average_variance?: number | null;
          inventory_value?: number | null;
          total_reservations?: number | null;
          total_covers?: number | null;
          no_show_count?: number | null;
          average_party_size?: number | null;
          emails_sent?: number | null;
          email_open_rate?: number | null;
          email_click_rate?: number | null;
          marketing_attributed_revenue?: number | null;
          social_reach?: number | null;
          social_engagement?: number | null;
          ad_spend?: number | null;
          ad_revenue?: number | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      chat_history: {
        Row: {
          id: string;
          session_id: string | null;
          timestamp: string;
          role: string;
          content: string;
          snapshot_timestamp: string | null;
          context_data: Json | null;
          recommendations: Json | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          session_id?: string | null;
          timestamp?: string;
          role: string;
          content: string;
          snapshot_timestamp?: string | null;
          context_data?: Json | null;
          recommendations?: Json | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          session_id?: string | null;
          timestamp?: string;
          role?: string;
          content?: string;
          snapshot_timestamp?: string | null;
          context_data?: Json | null;
          recommendations?: Json | null;
          created_at?: string;
        };
      };
      action_log: {
        Row: {
          id: string;
          timestamp: string;
          platform: string;
          action_type: string;
          parameters: Json | null;
          status: string | null;
          executed_at: string | null;
          executed_by: string | null;
          result: Json | null;
          error_message: string | null;
          confirmation_required: boolean;
          confirmed_at: string | null;
          rollback_data: Json | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          timestamp?: string;
          platform: string;
          action_type: string;
          parameters?: Json | null;
          status?: string | null;
          executed_at?: string | null;
          executed_by?: string | null;
          result?: Json | null;
          error_message?: string | null;
          confirmation_required?: boolean;
          confirmed_at?: string | null;
          rollback_data?: Json | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          timestamp?: string;
          platform?: string;
          action_type?: string;
          parameters?: Json | null;
          status?: string | null;
          executed_at?: string | null;
          executed_by?: string | null;
          result?: Json | null;
          error_message?: string | null;
          confirmation_required?: boolean;
          confirmed_at?: string | null;
          rollback_data?: Json | null;
          created_at?: string;
        };
      };
    };
    Views: Record<string, never>;
    Functions: Record<string, never>;
    Enums: Record<string, never>;
  };
}

// Helper types for easier access
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row'];
export type InsertTables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert'];
export type UpdateTables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update'];

// Specific table types for convenience
export type VenueConfig = Tables<'venue_config'>;
export type ApiCredentials = Tables<'api_credentials'>;
export type VenueSnapshot = Tables<'venue_snapshots'>;
export type EventbriteEvent = Tables<'eventbrite_events'>;
export type ToastTransaction = Tables<'toast_transactions'>;
export type WiskInventory = Tables<'wisk_inventory'>;
export type DailySummary = Tables<'daily_summaries'>;
export type ChatHistory = Tables<'chat_history'>;
export type ActionLog = Tables<'action_log'>;